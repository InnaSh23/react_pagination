{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","items","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","arrayItems","handlePageChange","newPage","className","cn","disabled","href","undefined","onClick","map","item","active","slice","length","App","useState","selectedPage","setSelectedPage","countItem","setCountItem","min","id","onChange","event","Number","target","value","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAuBf,EAAW,EAAGY,GAErCI,EAAmB,SAACC,GACpBP,IAAgBO,GAClBN,EAAaM,IAIjB,OACE,qCACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAChB,CAAEC,SAA0B,IAAhBV,IADd,SAGE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAsB,IAAhBX,EAAoB,aAAUY,EACpC,gBAA+B,IAAhBZ,EACfa,QAAyB,IAAhBb,EACL,kBAAMM,EAAiBN,EAAc,SACrCY,EAPN,oBAaDP,EAAWS,KAAI,SAACC,GAAD,OACd,oBAEEP,UAAWC,IAAG,YACZ,CAAEO,OAAQhB,IAAgBe,IAH9B,SAKE,mBACE,UAAQ,WACRP,UAAU,YACVG,KAAI,WAAMI,GACVF,QAAS,kBAAMP,EAAiBS,IAJlC,SAMGA,KAVEA,MAeT,oBAAIP,UAAWC,IAAG,YAChB,CAAEC,SAAUV,IAAgBE,IAD9B,SAGE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAMX,IAAgBE,EAAa,aAAUU,EAC7C,gBAAeZ,IAAgBE,EAC/BW,QAASb,IAAgBE,EACrB,kBAAMI,EAAiBN,EAAc,SACrCY,EAPN,uBAcJ,6BACGf,EACEoB,OAAOjB,EAAc,GAAKD,EAASC,EAAcD,GACjDe,KAAI,SAACC,GAAD,OACH,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YChFblB,EAAQP,EAAW,EAAG,IACzBwB,KAAI,SAAApB,GAAC,qBAAYA,MACdI,EAAQD,EAAMqB,OAEPC,EAAgB,WAC3B,MAAwCC,mBAAiB,GAAzD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCF,mBAAiB,GAAnD,mBAAOG,EAAP,KAAkBC,EAAlB,KAWA,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWa,EADX,oBACmCA,EAAe,GAAKE,EAAY,EADnE,cAC0EpB,KAAKsB,IAAIJ,EAAeE,EAAWzB,GAD7G,eAC0HA,EAD1H,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,SAnBkB,SAACC,GAC3BJ,EAAaK,OAAOD,EAAME,OAAOC,QACjCT,EAAgB,IAkBRS,MAAOR,EALT,UAOE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEX,MAAOA,EACPC,MAAOA,EACPC,QAASwB,EACTvB,YAAaqB,EACbpB,aA3Cc,SAACgC,GACnBX,EAAgBW,UCZpBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.084a4a24.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  items: string[];\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (value: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  items,\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const arrayItems: number[] = getNumbers(1, totalPages);\n\n  const handlePageChange = (newPage: number) => {\n    if (currentPage !== newPage) {\n      onPageChange(newPage);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item',\n          { disabled: currentPage === 1 })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href={currentPage !== 1 ? '#prev' : undefined}\n            aria-disabled={currentPage === 1}\n            onClick={currentPage !== 1\n              ? () => handlePageChange(currentPage - 1)\n              : undefined}\n          >\n            «\n          </a>\n        </li>\n\n        {arrayItems.map((item) => (\n          <li\n            key={item}\n            className={cn('page-item',\n              { active: currentPage === item })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${item}`}\n              onClick={() => handlePageChange(item)}\n            >\n              {item}\n            </a>\n          </li>\n        ))}\n\n        <li className={cn('page-item',\n          { disabled: currentPage === totalPages })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href={currentPage !== totalPages ? '#next' : undefined}\n            aria-disabled={currentPage === totalPages}\n            onClick={currentPage !== totalPages\n              ? () => handlePageChange(currentPage + 1)\n              : undefined}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {items\n          .slice((currentPage - 1) * perPage, currentPage * perPage)\n          .map((item) => (\n            <li\n              key={item}\n              data-cy=\"item\"\n            >\n              {item}\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\nconst total = items.length;\n\nexport const App: React.FC = () => {\n  const [selectedPage, setSelectedPage] = useState<number>(1);\n  const [countItem, setCountItem] = useState<number>(5);\n\n  const pageChange = ((page: number) => {\n    setSelectedPage(page);\n  });\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setCountItem(Number(event.target.value));\n    setSelectedPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${(selectedPage - 1) * countItem + 1} - ${Math.min(selectedPage * countItem, total)} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handlePerPageChange}\n            value={countItem}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        items={items}\n        total={total}\n        perPage={countItem}\n        currentPage={selectedPage}\n        onPageChange={pageChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}